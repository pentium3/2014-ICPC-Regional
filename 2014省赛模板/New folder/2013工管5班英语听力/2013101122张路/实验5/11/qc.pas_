var al,ar,mn,mx,s,mid,tmp,ans:int64;
    l,r,w,v:array[1..200000] of int64;
    i,n,m:longint;

function process(x:longint):longint;
var ta,tm,sm,i,j:longint;
begin
ta:=0;
for i:=1 to m do
 begin
 tm:=0;
 sm:=0;
 for j:=l[i] to r[i] do
  if w[j]>=x then
   begin
   inc(sm);
   inc(tm,v[j]);
   end;
 inc(ta,tm*sm);
 end;
exit(ta);
end;

begin
assign(input,'qc.in');
reset(input);
assign(output,'qc.out');
rewrite(output);

mn:=maxlongint;
mx:=0;
readln(n,m,s);
for i:=1 to n do
 begin
 readln(w[i],v[i]);
 if w[i]<mn then mn:=w[i];
 if w[i]>mx then mx:=w[i];
 end;
for i:=1 to m do
 readln(l[i],r[i]);

ans:=maxlongint;
al:=mn; ar:=mx;

while al<ar do
 begin
 mid:=(al+ar) div 2;
 tmp:=process(mid);

{if tmp-s>0 then
  begin
  ans:=tmp;
  al:=mid+1;
  end
 else
  ar:=mid-1;
 }
 if abs(tmp-s)<ans then
  begin
  ans:=abs(tmp-s);
  if tmp-s>0 then al:=mid+1
   else ar:=mid-1;
  end
 else
  begin
  if tmp-s>0 then ar:=mid-1
   else al:=mid+1;
  end;
 end;


writeln(ans);

close(input);
close(output);
end.


